name: Publish After Version Bump Merge

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  publish:
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'release')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: main
        fetch-depth: 0
      
    - name: Configure git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
      
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build project
      run: pnpm build
        
    - name: Get version from package.json
      id: version
      run: |
        VERSION=$(node -e "console.log(require('./package.json').version)")
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        
    - name: Check if version is already published
      id: check_published
      run: |
        if npm view @him0/freee-mcp@${{ steps.version.outputs.version }} version 2>/dev/null; then
          echo "already_published=true" >> $GITHUB_OUTPUT
          echo "Version ${{ steps.version.outputs.version }} is already published to npm"
        else
          echo "already_published=false" >> $GITHUB_OUTPUT
          echo "Version ${{ steps.version.outputs.version }} is not yet published"
        fi
        
    - name: Publish to npm (dry run)
      if: steps.check_published.outputs.already_published != 'true'
      run: npm publish --dry-run --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Publish to npm
      if: steps.check_published.outputs.already_published != 'true'
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create tag
      if: steps.check_published.outputs.already_published != 'true'
      run: |
        # Check if tag already exists
        if git rev-parse v${{ steps.version.outputs.version }} >/dev/null 2>&1; then
          echo "Tag v${{ steps.version.outputs.version }} already exists"
        else
          git tag v${{ steps.version.outputs.version }}
          git push origin v${{ steps.version.outputs.version }}
        fi
        
    - name: Generate release notes
      if: steps.check_published.outputs.already_published != 'true'
      id: release_notes
      run: |
        VERSION=${{ steps.version.outputs.version }}
        PREVIOUS_TAG=$(git describe --abbrev=0 --tags HEAD^ 2>/dev/null || echo "")
        
        echo "## What's Changed" > release_notes.md
        echo "" >> release_notes.md
        
        if [ -n "$PREVIOUS_TAG" ]; then
          git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges | grep -v "^- chore: bump version" >> release_notes.md || echo "- Various improvements and fixes" >> release_notes.md
        else
          echo "Initial release" >> release_notes.md
        fi
        
        echo "" >> release_notes.md
        echo "" >> release_notes.md
        echo "## Package" >> release_notes.md
        echo "- npm: https://www.npmjs.com/package/@him0/freee-mcp/v/${VERSION}" >> release_notes.md
        echo "- Install: \`npm install @him0/freee-mcp@${VERSION}\`" >> release_notes.md
        
    - name: Create GitHub Release
      if: steps.check_published.outputs.already_published != 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: v${{ steps.version.outputs.version }}
        body_path: release_notes.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}